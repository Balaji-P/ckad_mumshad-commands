Read Docker security concepts before 

Add privileges to docker root user can be configured via K8s as well
these can be configured as contianer as well as pod level 
if configured at both container settings override the pods 

kubectl exec ubuntu-sleeper<pod_name> -- whoami  // to check what is user is running containers

The above is done securityContext in yaml file 
-------- below  is at Pod Level 
apiVersion:v1
kind: Pod
metadata:
    name: name
spec:
    securityContext: 
        runAsUser: 1000  // user Id 
    containers:
        - name: ubuntu
          image: ubuntu 
          command: ["sleep" , "3600"]

// capablites are only supported at contianer level 

--------- below  is at container level 

apiVersion:v1
kind: Pod
metadata:
    name: name
spec:
    containers:
        - name: ubuntu
          image: ubuntu 
          command: ["sleep" , "3600"]
          securityContext: 
            runAsUser: 1000 // userid 
            capablites: 
                add: ["MAC_ADMIN"]  // capablites are only supported at contianer level 

// capablites are only supported at contianer level 


kubectl exec -it ubuntu-sleeper -- date -s '19 APR 2012 11:14:00'  
// Set the Pod time to given 
// This will only work it container has SYS_TIME capablites Like below example 


apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: ubuntu-sleeper
  name: ubuntu-sleeper
spec:
  containers:
  - image: ubuntu
    name: ubuntu-sleeper
    command:
    - "sleep"
    - "4800"
    securityContext:
      capabilities:
        add: ["SYS_TIME"]
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}